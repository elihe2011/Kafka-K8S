apiVersion: v1
kind: Namespace
metadata:
  name: "kafka-cluster"
  labels:
    name: "kafka-cluster"

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv
  namespace: kafka-cluster
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /data/kafka
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8s-master
          - k8s-node01
          - k8s-node02

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
  namespace: kafka-cluster
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  labels:
    app: kafka-app
  namespace: kafka-cluster
spec:
  clusterIP: None
  ports:
    - name: kafka
      port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    app: kafka-app

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka-app
  namespace: kafka-cluster
spec:
  serviceName: kafka-headless
  replicas: 3
  selector:
    matchLabels:
      app: kafka-app
  template:
    metadata:
      labels:
        app: kafka-app
    spec:
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: kafka-pvc
      containers:
        - name: kafka-container
          image: kafka:3.0.0
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: REPLICAS
              value: '3'
            - name: CLUSTER_ID
              value: 9dJzdGvfTPaCY4e8klXaDQ
            - name: SERVICE
              value: kafka-svc
            - name: NAMESPACE
              value: kafka-cluster
            - name: SHARE_DIR
              value: /data/kafka
            - name: K8S_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - name: kafka-storage
              mountPath: /data/kafka
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kafka-container
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-external-0
  labels:
    app: kafka-app
  namespace: kafka-cluster
spec:
  type: NodePort
  selector:
    statefulset.kubernetes.io/pod-name: kafka-0
  ports:
    - protocol: TCP
      port: 30090
      targetPort: 30090
      nodePort: 30090
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-external-1
  labels:
    app: kafka-app
  namespace: kafka-cluster
spec:
  type: NodePort
  selector:
    statefulset.kubernetes.io/pod-name: kafka-1
  ports:
    - protocol: TCP
      port: 30091
      targetPort: 30091
      nodePort: 30091
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-external-2
  labels:
    app: kafka-app
  namespace: kafka-cluster
spec:
  type: NodePort
  selector:
    statefulset.kubernetes.io/pod-name: kafka-2
  ports:
    - protocol: TCP
      port: 30092
      targetPort: 30092
      nodePort: 30092
